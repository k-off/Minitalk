{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17800\viewh24920\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\f0\b\fs72 \cf0 Rush Environment UNIX I\

\b0\fs28 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\fs48 \cf0 \'93minitalk\'94\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\fs28 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\i \cf0 Summary: This rush is intended to make you create a small program of exchange of data using the UNIX signals\
instructions\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\i0 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 This project will only be corrected by humans. You are therefore free to organise and name your files as you wish, while respecting the constraints listed here.\
Your executables should be called 
\i\b client
\i0\b0  and 
\i\b server
\i0\b0 .\
You must make a Makefile. Your Makefile will compile the project, and must contain the usual rules. It should only recompile the program if necessary. It must of course compile your 
\b TWO
\b0  executables. If you are clever and use your library libft for your project, you must copy the sources and the associated Makefile into a folder named libft which should be at the root of your repository. Your Makefile will have to compile the library, calling its Makefile, and compile your project.\
Your project must be in the Norm. \
You must handle errors in a reasoned way. In no case should your program quit unexpectedly (Segmentation fault, etc ...).\
You must submit, at the root of your repository, an 
\i\b author file
\i0\b0  containing your logins followed by a '\\ n'.\
As part of your mandatory part, you have the right to use the following :\
-signal\
-kill\
-getpid\
-mal\'a0loc\
-free\
-pause\
-sleep\
-usleep\
-exit\

\i As part of your bonus part
\i0 , you have PLUS the right to use the following functions:\
-sigaction\
You can ask your questions on the forum, ...\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\b\fs72 \cf0 Subject - Mandatory part
\b0\fs28 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
You must perform a communication program in the form of a client and a server.\
The server must be started first, and after launch, display its PID.\
The client will take in parameter:\
-The server's PID\
-A string of characters to transmit\
The client must communicate to the server the string passed in parameter. After the string is completely received, the server must display it.\
Communication between your programs should 
\b ONLY
\b0  be done using UNIX signals.\
The server must be able to display the string quickly. By quickly, we mean that if you think it's too long, then it's probably too long (
\i hint: 1 second for 100 characters, it's COLOSSAL
\i0 )\
Your server must be able to receive strings from multiple clients in a row, without needing to be restarted.\
You have the right to one (and only one) global variable per program, which you must rigorously justify to the correction.\
You can only use both signals SIGUSR1 and SIGUSR2\
The volume of transmitted data must be reasonable (
\i hint: more than 8 signals for a single character, that's too much!
\i0 )\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\b\fs72 \cf0 Subject - Bonus part\

\b0\fs28 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 Bonuses will only be assessed if your mandatory part is PERFECT. This means that it is fully implemented, that your error handling is perfected, even in vicious cases, or cases of misuse. In concrete terms, if your mandatory part is not perfect, your bonuses will be fully 
\b IGNORED
\b0 .\
\
Here are some interesting, or even useful bonus ideas to make. You can obviously add bonuses of your invention, which will be evaluated by peers.\
Management of transmission 
\b errors and re-transmission
\b0  of failed segments\
Management of several 
\b SIMULTANEOUS
\b0  
\b clients
\b0 \
Data 
\b compression
\b0 \
"
\b Ping-pong
\b0 " acknowledgments\

\b Optimization
\b0  of CPU usage / memory usage.\
\
Submission and peer-evaluation\
Make your work on your GiT repository as usual. Only work present on it will be evaluated in defence.\
}